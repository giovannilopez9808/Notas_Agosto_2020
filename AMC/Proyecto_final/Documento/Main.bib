@article{Berman2000,
  abstract = {We simulate Shor's algorithm using the Ising spin quantum computer. The influence of nonresonant effects is analyzed in detail. It is shown that the method developed earlier in our papers successfully suppresses nonresonant effects even for relatively large values of the Rabi frequency. {\textcopyright} 2000 The American Physical Society.},
  author   = {Berman, G. P. and Doolen, G. D. and L{\'{o}}pez, G. V. and Tsifrinovich, V. I.},
  doi      = {10.1103/PhysRevA.61.042307},
  file     = {:home/giovanni/Downloads/berman2000.pdf:pdf},
  issn     = {10941622},
  journal  = {Physical Review A - Atomic, Molecular, and Optical Physics},
  number   = {4},
  pages    = {7},
  title    = {{Nonresonant effects in the implementation of the quantum Shor algorithm}},
  volume   = {61},
  year     = {2000}
}
@article{Gerjuoy2005,
  abstract      = {The security of messages encoded via the widely used RSA public key encryption system rests on the enormous computational effort required to find the prime factors of a large number N using classical (i.e., conventional) computers. In 1994, however, Peter Shor showed that for sufficiently large N a quantum computer would be expected to perform the factoring with much less computational effort. This paper endeavors to explain, in a fashion comprehensible to the non-expert readers of this journal: (i) the RSA encryption protocol; (ii) the various quantum computer manipulations constituting the Shor algorithm; (iii) how the Shor algorithm performs the factoring; and (iv) the precise sense in which a quantum computer employing Shor's algorithm can be said to accomplish the factoring of very large numbers with less computational effort than a classical computer can. It is made apparent that factoring {\$}N{\$} generally requires many successive runs of the algorithm. The careful analysis herein reveals, however, that the probability of achieving a successful factorization on a single run is about twice as large as commonly quoted in the literature.},
  archiveprefix = {arXiv},
  arxivid       = {quant-ph/0411184},
  author        = {Gerjuoy, Edward},
  doi           = {10.1119/1.1891170},
  eprint        = {0411184},
  file          = {:home/giovanni/Downloads/gerjuoy2005.pdf:pdf},
  issn          = {0002-9505},
  journal       = {American Journal of Physics},
  number        = {6},
  pages         = {521--540},
  primaryclass  = {quant-ph},
  title         = {{Shor's factoring algorithm and modern cryptography. An illustration of the capabilities inherent in quantum computers}},
  volume        = {73},
  year          = {2005}
}
@article{Ghisi2000,
  abstract = {Shor algorithm dynamics of quantum computation states are analysed from the classical and the quantum information theory points of view. The Shannon entropy is interpreted as the degree of information accessibility through measurement, while the von Neumann entropy is employed to measure the quantum information of entanglement. The intelligence of a state with respect to a subset of qubits is defined. The intelligence of a state is maximal if the gap between the Shannon and the von Neumann entropy for the chosen result qubits is minimal. We prove that the quantum Fourier transform creates maximally intelligent states with respect to the first n qubits for Shor's problem, since it annihilates the gap between the classical and quantum entropies for the first n qubits of every output state. {\textcopyright} 2000 Taylor {\&} Francis Group, LLC.},
  author   = {Ghisi, F. and Ulyanov, S. V.},
  doi      = {10.1080/09500340008235130},
  file     = {:home/giovanni/Downloads/ghisi2000.pdf:pdf},
  issn     = {13623044},
  journal  = {Journal of Modern Optics},
  number   = {12},
  pages    = {2079--2090},
  title    = {{The information role of entanglement and interference operators in Shor quantum algorithm gate dynamics}},
  volume   = {47},
  year     = {2000}
}
@article{Koch2020,
  abstract      = {With the increasing rise of publicly available high level quantum computing languages, the field of Quantum Computing has reached an important milestone of separation of software from hardware. Consequently, the study of Quantum Algorithms is beginning to emerge as university courses and disciplines around the world, spanning physics, math, and computer science departments alike. As a continuation to its predecessor: "Introduction to Coding Quantum Algorithms: A Tutorial Series Using Qiskit", this tutorial series aims to help understand several of the most promising quantum algorithms to date, including Phase Estimation, Shor's, QAOA, VQE, and several others. Accompanying each algorithm's theoretical foundations are coding examples utilizing IBM's Qiskit, demonstrating the strengths and challenges of implementing each algorithm in gate-based quantum computing.},
  archiveprefix = {arXiv},
  arxivid       = {2008.10647},
  author        = {Koch, Daniel and Patel, Saahil and Wessing, Laura and Alsing, Paul M.},
  eprint        = {2008.10647},
  file          = {:home/giovanni/Downloads/2008.10647.pdf:pdf},
  title         = {{Fundamentals In Quantum Algorithms: A Tutorial Series Using Qiskit Continued}},
  url           = {http://arxiv.org/abs/2008.10647},
  year          = {2020}
}
@article{Lomonaco2005,
  abstract      = {In this paper, we use the methods found in quant-ph/0201095 to create a continuous variable analogue of Shor's quantum factoring algorithm. By this we mean a quantum hidden subgroup algorithm that finds the period P of a function F:R--{\textgreater}R from the reals R to the reals R, where F belongs to a very general class of functions, called the class of admissible functions. One objective in creating this continuous variable quantum algorithm was to make the structure of Shor's factoring algorithm more mathematically transparent, and thereby give some insight into the inner workings of Shor's original algorithm. This continuous quantum algorithm also gives some insight into the inner workings of Hallgren's Pell's equation algorithm. Two key questions remain unanswered. Is this quantum algorithm more efficient than its classical continuous variable counterpart? Is this quantum algorithm or some approximation of it implementable?},
  archiveprefix = {arXiv},
  arxivid       = {quant-ph/0210141},
  author        = {Lomonaco, Samuel J. and Kauffman, Louis H.},
  doi           = {10.1090/conm/381/07093},
  eprint        = {0210141},
  file          = {:home/giovanni/Downloads/10.1007@b99427.pdf:pdf},
  pages         = {97--108},
  primaryclass  = {quant-ph},
  title         = {{A continuous variable Shor algorithm}},
  year          = {2005}
}
@article{Shor1997,
  abstract      = {A digital computer is generally believed to be an efficient universal computing device; that is, it is believed able to simulate any physical computing device with an increase in computation time by at most a polynomial factor. This may not be true when quantum mechanics is taken into consideration. This paper considers factoring integers and finding discrete logarithms, two problems which are generally thought to be hard on a classical computer and which have been used as the basis of several proposed cryptosystems. Efficient randomized algorithms are given for these two problems on a hypothetical quantum computer. These algorithms take a number of steps polynomial in the input size, e.g., the number of digits of the integer to be factored.},
  archiveprefix = {arXiv},
  arxivid       = {quant-ph/9508027},
  author        = {Shor, Peter W.},
  doi           = {10.1137/S0097539795293172},
  eprint        = {9508027},
  file          = {:home/giovanni/Documents/Clases/AMC/Proyecto{\_}final/Referencias/shor1997.pdf:pdf},
  isbn          = {0097539795293},
  issn          = {00975397},
  journal       = {SIAM Journal on Computing},
  keywords      = {Algorithmic number theory,Church's thesis,Discrete logarithms,Foundations of quantum mechanics,Fourier transforms,Prime factorization,Quantum computers,Spin systems},
  number        = {5},
  pages         = {1484--1509},
  primaryclass  = {quant-ph},
  title         = {{Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer}},
  volume        = {26},
  year          = {1997}
}
@article{Vandersypen2001,
  abstract      = {The number of steps any classical computer requires in order to find the prime factors of an 1-digit integer N increases exponentially with 1, at least using algorithms known at present1. Factoring large integers is therefore conjectured to be intractable classically, an observation underlying the security of widely used cryptographic codes1, 2. Quantum computer3, however, could factor integers in only polynomial time, using Shor's quantum factoring algorithm4-6. Although important for the study of quantum computers7, experimental demonstration of this algorithm has proved elusive8-10. Here we report an implementation of the simplest instance of Shor's algorithm: factorization of N = 15 (whose prime factors are 3 and 5). We use seven spin-1/2 nuclei in a molecule as quantum bits11, 12, which can be manipulated with room temperature liquid-state nuclear magnetic resonance techniques. This method of using nuclei to store quantum information is in principle scalable to systems containing many quantum bits13, but such scalability is not implied by the present work. The significance of our work lies in the demonstration of experimental and theoretical techniques for precise control and modelling of complex quantum computers. In particular, we present a simple, parameter-free but predictive model of decoherence effects in our system.},
  archiveprefix = {arXiv},
  arxivid       = {quant-ph/0112176},
  author        = {Vandersypen, Lieven M.K. and Breyta, Matthias and Steffen, Gregory and Yannoni, Costantino S. and Sherwood, Mark H. and Chuang, Isaac L.},
  doi           = {10.1038/414883a},
  eprint        = {0112176},
  file          = {:home/giovanni/Downloads/vandersypen2001.pdf:pdf},
  issn          = {00280836},
  journal       = {Nature},
  number        = {6866},
  pages         = {883--887},
  pmid          = {11780055},
  primaryclass  = {quant-ph},
  title         = {{Experimental realization of Shor's quantum factoring algorithm using nuclear magnetic resonance}},
  volume        = {414},
  year          = {2001}
}
@article{Yimsiriwattana2004,
  abstract      = {We present a distributed implementation of Shor's quantum factoring algorithm on a distributed quantum network model. This model provides a means for small capacity quantum computers to work together in such a way as to simulate a large capacity quantum computer. In this paper, entanglement is used as a resource for implementing non-local operations between two or more quantum computers. These non-local operations are used to implement a distributed factoring circuit with polynomially many gates. This distributed version of Shor's algorithm requires an additional overhead of O((log N){\^{}}2) communication complexity, where N denotes the integer to be factored.},
  archiveprefix = {arXiv},
  arxivid       = {quant-ph/0403146},
  author        = {Yimsiriwattana, Anocha and {Lomonaco Jr.}, Samuel J.},
  doi           = {10.1117/12.546504},
  eprint        = {0403146},
  file          = {:home/giovanni/Downloads/yimsiriwattana2004.pdf:pdf},
  issn          = {0277-786X},
  journal       = {Quantum Information and Computation II},
  keywords      = {distributed quantum algorithms,factoring algorithm,quantum circuit,s algorithm,shor},
  pages         = {360},
  primaryclass  = {quant-ph},
  title         = {{Distributed quantum computing: a distributed Shor algorithm}},
  volume        = {5436},
  year          = {2004}
}
@article{Zhou2017,
  abstract      = {The quantum Fourier transform, with exponential speed-up compared to the classical fast Fourier transform, has played an important role in quantum computation as a vital part of many quantum algorithms (most prominently, Shor's factoring algorithm). However, situations arise where it is not sufficient to encode the Fourier coefficients within the quantum amplitudes, for example in the implementation of control operations that depend on Fourier coefficients. In this paper, we detail a new quantum scheme to encode Fourier coefficients in the computational basis, with fidelity 1 - $\delta$ and digit accuracy ϵ for each Fourier coefficient. Its time complexity depends polynomially on log (N) , where N is the problem size, and linearly on 1 / $\delta$ and 1 / ϵ. We also discuss an application of potential practical importance, namely the simulation of circulant Hamiltonians.},
  archiveprefix = {arXiv},
  arxivid       = {1511.04818},
  author        = {Zhou, S. S. and Loke, T. and Izaac, J. A. and Wang, J. B.},
  doi           = {10.1007/s11128-017-1515-0},
  eprint        = {1511.04818},
  file          = {:home/giovanni/Documents/Clases/AMC/Proyecto{\_}final/Referencias/zhou2017.pdf:pdf},
  isbn          = {1112801715},
  issn          = {15700755},
  journal       = {Quantum Information Processing},
  keywords      = {Computational basis state,Controlled quantum gates,Quantum Fourier transform,Quantum algorithm},
  number        = {3},
  pages         = {1--19},
  publisher     = {Springer US},
  title         = {{Quantum Fourier transform in computational basis}},
  volume        = {16},
  year          = {2017}
}
